{
  "name": "SyBiOnt: The Synthetic Biology Ontology",
  "tagline": "",
  "body": "### SyBiOnt: The Synthetic Biology Open Language\r\n\r\nPublished in ACS Synthetic Biology.\r\n[Data Integration and Mining for Synthetic Biology Design](http://pubs.acs.org/doi/abs/10.1021/acssynbio.5b00295)\r\nGöksel Mısırlı, Jennifer Hallinan, Matthew Pocock, Phillip Lord, James Alastair McLaughlin, Herbert Sauro, and Anil Wipat\r\nACS Synthetic Biology 2016 5 (10), 1086-1097\r\nDOI: 10.1021/acssynbio.5b00295\r\n\r\nSyBiOnt is an application ontology for synthetic biology. We developed this ontology to represent the richset of biological knowledge about biological components and their relationships. We demonstrated the use of this ontology to create the SyBiOntKB knowledge base, incorporating and building upon existing life sciences ontologies and standards. The reasoning capabilities of ontologies were then applied to automate the mining of biological parts from this knowledge base. This approach is be useful to speed up synthetic biology design and ultimately help facilitate the automation of the biological engineering life cycle.\r\n\r\nThe basic biological parts used in the bottom-up design of synthetic systems include genetic features such as promoters, coding sequences (CDSs), ribosome binding sites (RBSs), terminators, and operators.The relationships among these parts and the gene products they encode, such as proteins, RNAs, transcription factors\r\n(TFs), and enzymes, need to be captured in order to design genetic circuits. Moreover, the incorporation of additional information about biological pathways and gene function is necessary to identify appropriate biological parts. Our goal when creating SyBiOnt was to allow a data definition framework to formalize the representation of the information that describes these parts and the relationships among them. SyBiOnt was designed to allow the incorporation of further information in the form of annotations that add extra, useful knowledge such as gene function. The ontology was developed using OWL semantics. The rich expressivity of OWL enables the construction of complex computational queries and automated reasoning across the integrated data.\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}